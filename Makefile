DOCKER_CMD = docker
DOCKER_COMPOSE_CMD = docker-compose
DOCKER_FILE_PATH = docker

GRAMINE_BASE_DOCKER_IMAGE_NAME = gramine-base
GRAMINE_BASE_DOCKER_IMAGE_TAG = latest
GRAMINE_CONSUMER_DOCKER_IMAGE_NAME = gramine-consumer
GRAMINE_CONSUMER_DOCKER_IMAGE_TAG = latest
GRAMINE_REGISTRY_DOCKER_IMAGE_NAME = gramine-registry
GRAMINE_REGISTRY_DOCKER_IMAGE_TAG = latest
DB_PROVIDER_DOCKER_IMAGE_NAME = db-provider
DB_PROVIDER_DOCKER_IMAGE_TAG = latest
SERVER_PROVIDER_DOCKER_IMAGE_NAME = server-provider
SERVER_PROVIDER_DOCKER_IMAGE_TAG = latest
ANALYZER_REGISTRY_DOCKER_IMAGE_NAME = analyzer-registry
ANALYZER_REGISTRY_DOCKER_IMAGE_TAG = latest
CA_REGISTRY_DOCKER_IMAGE_NAME = ca-registry
CA_REGISTRY_DOCKER_IMAGE_TAG = latest
API_REGISTRY_DOCKER_IMAGE_NAME = api-registry
API_REGISTRY_DOCKER_IMAGE_TAG = latest
PSUEDO_IAS_DOCKER_IMAGE_NAME = psuedo-ias
PSUEDO_IAS_DOCKER_IMAGE_TAG = latest
PSUEDO_API_DOCKER_IMAGE_NAME = psuedo-api
PSUEDO_API_DOCKER_IMAGE_TAG = latest
DATATYPE_API_IMAGE_NAME = datatype-api
DATATYPE_API_IMAGE_TAG = latest

SPID = 1234567890abcdef1234567890abcdef
IS_LINKABLE = 0
IAS_SUBSCRIPTION_KEY = 1234567890abcdef1234567890abcdef
COUNTRY_CONSUMER = JP
CNAME_CONSUMER = consumer.example.com

SERVER_PROVIDER_PORT = 443
SERVER_PROVIDER_HOST_NAME = 172.24.30.207
PRIVATE_CA = 172.24.30.207:8001

REGISTRY_DOCKERCOMPOSE_TEMPLATE_FILE = registry/docker-compose_template.yml
REGISTRY_DOCKERCOMPOSE_FILE = registry/docker-compose.yml
SERVER_PROVIDER_HOST_NAME = 192.168.11.2
PRIVATE_CA = 192.168.11.1:8001

gramine-base:
	@echo "Building $(GRAMINE_BASE_DOCKER_IMAGE_NAME):$(GRAMINE_BASE_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.graminebase $(DOCKER_FILE_PATH) \
	-t $(GRAMINE_BASE_DOCKER_IMAGE_NAME):$(GRAMINE_BASE_DOCKER_IMAGE_TAG)
	@echo "Saving $(GRAMINE_BASE_DOCKER_IMAGE_NAME):$(GRAMINE_BASE_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) save $(GRAMINE_BASE_DOCKER_IMAGE_NAME):$(GRAMINE_BASE_DOCKER_IMAGE_TAG) | \
	gzip -c > $(DOCKER_FILE_PATH)/gramine_base/$(GRAMINE_BASE_DOCKER_IMAGE_NAME)_$(GRAMINE_BASE_DOCKER_IMAGE_TAG).tar.gz
	@echo "The base image was saved to ${DOCKER_FILE_PATH}/gramine_base/${GRAMINE_BASE_DOCKER_IMAGE_NAME}_${GRAMINE_BASE_DOCKER_IMAGE_TAG}.tar.gz"

.PHONY: gramine-consumer
gramine-consumer:
	@echo "Building $(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME):$(GRAMINE_CONSUMER_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.gramineconsumer $(DOCKER_FILE_PATH) \
	-t $(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME):$(GRAMINE_CONSUMER_DOCKER_IMAGE_TAG) \
	--build-arg BASEIMAGE=$(GRAMINE_BASE_DOCKER_IMAGE_NAME) \
	--build-arg BASEIMAGE_TAG=$(GRAMINE_BASE_DOCKER_IMAGE_TAG)

.PHONY: gramine-registry
gramine-registry: gramine-base
	@echo "Building $(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME):$(GRAMINE_REGISTRY_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.gramineregistry $(DOCKER_FILE_PATH) \
	-t $(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME):$(GRAMINE_REGISTRY_DOCKER_IMAGE_TAG) \
	--build-arg BASEIMAGE=$(GRAMINE_BASE_DOCKER_IMAGE_NAME) \
	--build-arg BASEIMAGE_TAG=$(GRAMINE_BASE_DOCKER_IMAGE_TAG)

.PHONY: db-provider
db-provider:
	@echo "Building $(DB_PROVIDER_DOCKER_IMAGE_NAME):$(DB_PROVIDER_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.dbprovider $(DOCKER_FILE_PATH) \
	-t $(DB_PROVIDER_DOCKER_IMAGE_NAME):$(DB_PROVIDER_DOCKER_IMAGE_TAG)

.PHONY: provider
provider:
	@echo "Building $(SERVER_PROVIDER_DOCKER_IMAGE_NAME):$(SERVER_PROVIDER_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.provider $(DOCKER_FILE_PATH) \
	-t $(SERVER_PROVIDER_DOCKER_IMAGE_NAME):$(SERVER_PROVIDER_DOCKER_IMAGE_TAG)

.PHONY: analyzer-registry
analyzer-registry:
	@echo "Building $(ANALYZER_REGISTRY_DOCKER_IMAGE_NAME):$(ANALYZER_REGISTRY_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.analyzer $(DOCKER_FILE_PATH) \
	-t $(ANALYZER_REGISTRY_DOCKER_IMAGE_NAME):$(ANALYZER_REGISTRY_DOCKER_IMAGE_TAG)

.PHONY: ca-registry
ca-registry:
	@echo "Building $(CA_REGISTRY_DOCKER_IMAGE_NAME):$(CA_REGISTRY_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.ca $(DOCKER_FILE_PATH) \
	-t $(CA_REGISTRY_DOCKER_IMAGE_NAME):$(CA_REGISTRY_DOCKER_IMAGE_TAG)

.PHONY: api-registry
api-registry:
	@echo "Building $(API_REGISTRY_DOCKER_IMAGE_NAME):$(API_REGISTRY_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.apiregistry $(DOCKER_FILE_PATH) \
	-t $(API_REGISTRY_DOCKER_IMAGE_NAME):$(API_REGISTRY_DOCKER_IMAGE_TAG)

.PHONY: datatype-api
datatype-api:
	@echo "Building Datatype API"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.datatype $(DOCKER_FILE_PATH) \
	-t $(DATATYPE_API_IMAGE_NAME):$(DATATYPE_API_IMAGE_TAG)

.PHONY: psuedo-ias
psuedo-ias:
	@echo "Building $(PSUEDO_IAS_DOCKER_IMAGE_NAME):$(PSUEDO_IAS_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.ias $(DOCKER_FILE_PATH) \
	-t $(PSUEDO_IAS_DOCKER_IMAGE_NAME):$(PSUEDO_IAS_DOCKER_IMAGE_TAG)

.PHONY: psuedo-api
psuedo-api:
	@echo "Building $(PSUEDO_API_DOCKER_IMAGE_NAME):$(PSUEDO_API_DOCKER_IMAGE_TAG)"
	@$(DOCKER_CMD) build -f $(DOCKER_FILE_PATH)/Dockerfile.api $(DOCKER_FILE_PATH) \
	-t $(PSUEDO_API_DOCKER_IMAGE_NAME):$(PSUEDO_API_DOCKER_IMAGE_TAG)

# Consumer
.PHONY: run-consumer
run-consumer: gramine-consumer
	@cd consumer && \
	GRAMINE_CONSUMER_IMAGE=$(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME) \
	GRAMINE_CONSUMER_IMAGE_TAG=$(GRAMINE_CONSUMER_DOCKER_IMAGE_TAG) \
	SPID=$(SPID) \
	IS_LINKABLE=$(IS_LINKABLE) \
	PRIVATE_CA=$(PRIVATE_CA) \
	IAS_SUBSCRIPTION_KEY=$(IAS_SUBSCRIPTION_KEY) \
	COUNTRY=$(COUNTRY_CONSUMER) \
	CNAME=$(CNAME_CONSUMER) \
	CONSUMER_HOST_NAME=$(CNAME_CONSUMER) \
	$(DOCKER_COMPOSE_CMD) up -d

.PHONY: run-consumer
stop-consumer:
	@cd consumer && \
	GRAMINE_CONSUMER_IMAGE=$(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME) \
	GRAMINE_CONSUMER_IMAGE_TAG=$(GRAMINE_CONSUMER_DOCKER_IMAGE_TAG) \
	SPID=$(SPID) \
	IS_LINKABLE=$(IS_LINKABLE) \
	PRIVATE_CA=$(PRIVATE_CA) \
	IAS_SUBSCRIPTION_KEY=$(IAS_SUBSCRIPTION_KEY) \
	COUNTRY=$(COUNTRY_CONSUMER) \
	CNAME=$(CNAME_CONSUMER) \
	CONSUMER_HOST_NAME=$(CNAME_CONSUMER) \
	$(DOCKER_COMPOSE_CMD) down

# Provider
.PHONY: run-provider
run-provider: db-provider provider
	@curl $(PRIVATE_CA)/root-crt > provider/files/RootCA.pem
	@cd provider && \
	SERVER_PROVIDER_IMAGE=$(SERVER_PROVIDER_DOCKER_IMAGE_NAME) \
	SERVER_PROVIDER_IMAGE_TAG=$(SERVER_PROVIDER_DOCKER_IMAGE_TAG) \
	DB_PROVIDER_IMAGE=$(DB_PROVIDER_DOCKER_IMAGE_NAME) \
	DB_PROVIDER_IMAGE_TAG=$(DB_PROVIDER_DOCKER_IMAGE_TAG) \
	SERVER_PORT=$(SERVER_PROVIDER_PORT) \
	SERVER_HOST_NAME=$(SERVER_PROVIDER_HOST_NAME) \
	PRIVATE_CA=$(PRIVATE_CA) \
	$(DOCKER_COMPOSE_CMD) up -d

.PHONY: stop-provider
stop-provider:
	@cd provider && \
	SERVER_PROVIDER_IMAGE=$(SERVER_PROVIDER_DOCKER_IMAGE_NAME) \
	SERVER_PROVIDER_IMAGE_TAG=$(SERVER_PROVIDER_DOCKER_IMAGE_TAG) \
	DB_PROVIDER_IMAGE=$(DB_PROVIDER_DOCKER_IMAGE_NAME) \
	DB_PROVIDER_IMAGE_TAG=$(DB_PROVIDER_DOCKER_IMAGE_TAG) \
	SERVER_PORT=$(SERVER_PROVIDER_PORT) \
	SERVER_HOST_NAME=$(SERVER_PROVIDER_HOST_NAME) \
	PRIVATE_CA=$(PRIVATE_CA) \
	$(DOCKER_COMPOSE_CMD) down

.PHONY: run-registry
run-registry: gramine-registry analyzer-registry ca-registry api-registry datatype-api psuedo-ias psuedo-api
	@cd registry && ./fablo up fablo-config.json
	@docker network ls -f "name=fablo_network" --format '{{.Name}}' | \
	xargs -i sed -e "s/FABLO_NETWORK/{}/g" $(REGISTRY_DOCKERCOMPOSE_TEMPLATE_FILE) > $(REGISTRY_DOCKERCOMPOSE_FILE)
	@cd registry && \
	GRAMINE_REGISTRY_IMAGE=$(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME) \
	GRAMINE_REGISTRY_IMAGE_TAG=$(GRAMINE_REGISTRY_DOCKER_IMAGE_TAG) \
	ANALYZER_REGISTRY_IMAGE=$(ANALYZER_REGISTRY_DOCKER_IMAGE_NAME) \
	ANALYZER_REGISTRY_IMAGE_TAG=$(ANALYZER_REGISTRY_DOCKER_IMAGE_TAG) \
	API_REGISTRY_IMAGE=$(API_REGISTRY_DOCKER_IMAGE_NAME) \
	API_REGISTRY_IMAGE_TAG=$(API_REGISTRY_DOCKER_IMAGE_TAG) \
	CA_REGISTRY_IMAGE=$(CA_REGISTRY_DOCKER_IMAGE_NAME) \
	CA_REGISTRY_IMAGE_TAG=$(CA_REGISTRY_DOCKER_IMAGE_TAG) \
	DATATYPE_API_IMAGE=$(DATATYPE_API_IMAGE_NAME) \
	DATATYPE_API_IMAGE_TAG=$(DATATYPE_API_IMAGE_TAG) \
	PSUEDO_IAS_DOCKER_IMAGE=$(PSUEDO_IAS_DOCKER_IMAGE_NAME) \
	PSUEDO_IAS_DOCKER_IMAGE_TAG=$(PSUEDO_IAS_DOCKER_IMAGE_TAG) \
	PSUEDO_API_DOCKER_IMAGE=$(PSUEDO_API_DOCKER_IMAGE_NAME) \
	PSUEDO_API_DOCKER_IMAGE_TAG=$(PSUEDO_API_DOCKER_IMAGE_TAG) \
	$(DOCKER_COMPOSE_CMD) up --build -d
	@cd registry && ./connect_registry_network.sh
	@cd init && ./registry_setup.sh
	@echo "Registry setup completed!"

.PHONY: stop-registry
stop-registry:
	@cd registry && ./fablo down && ./fablo prune || \
	GRAMINE_REGISTRY_IMAGE=$(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME) \
	GRAMINE_REGISTRY_IMAGE_TAG=$(GRAMINE_REGISTRY_DOCKER_IMAGE_TAG) \
	ANALYZER_REGISTRY_IMAGE=$(ANALYZER_REGISTRY_DOCKER_IMAGE_NAME) \
	ANALYZER_REGISTRY_IMAGE_TAG=$(ANALYZER_REGISTRY_DOCKER_IMAGE_TAG) \
	API_REGISTRY_IMAGE=$(API_REGISTRY_DOCKER_IMAGE_NAME) \
	API_REGISTRY_IMAGE_TAG=$(API_REGISTRY_DOCKER_IMAGE_TAG) \
	CA_REGISTRY_IMAGE=$(CA_REGISTRY_DOCKER_IMAGE_NAME) \
	CA_REGISTRY_IMAGE_TAG=$(CA_REGISTRY_DOCKER_IMAGE_TAG) \
	DATATYPE_API_IMAGE=$(DATATYPE_API_IMAGE_NAME) \
	DATATYPE_API_IMAGE_TAG=$(DATATYPE_API_IMAGE_TAG) \
	PSUEDO_IAS_DOCKER_IMAGE=$(PSUEDO_IAS_DOCKER_IMAGE_NAME) \
	PSUEDO_IAS_DOCKER_IMAGE_TAG=$(PSUEDO_IAS_DOCKER_IMAGE_TAG) \
	PSUEDO_API_DOCKER_IMAGE=$(PSUEDO_API_DOCKER_IMAGE_NAME) \
	PSUEDO_API_DOCKER_IMAGE_TAG=$(PSUEDO_API_DOCKER_IMAGE_TAG) \
	$(DOCKER_COMPOSE_CMD) down
	@cd registry && ./fablo down && ./fablo prune

.PHONY: clean
clean:
	@echo "Removing images"
	@$(DOCKER_CMD) rmi $(GRAMINE_BASE_DOCKER_IMAGE_NAME):$(GRAMINE_BASE_DOCKER_IMAGE_TAG) \
	$(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME):$(GRAMINE_CONSUMER_DOCKER_IMAGE_NAME) \
	$(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME):$(GRAMINE_REGISTRY_DOCKER_IMAGE_NAME) \
	$(DB_PROVIDER_DOCKER_IMAGE_NAME):$(DB_PROVIDER_DOCKER_IMAGE_TAG) \
	$(SERVER_PROVIDER_DOCKER_IMAGE_NAME):$(SERVER_PROVIDER_DOCKER_IMAGE_TAG) \
	$(ANALYZER_REGISTRY_DOCKER_IMAGE_NAME):$(ANALYZER_REGISTRY_DOCKER_IMAGE_TAG) \
	$(CA_REGISTRY_DOCKER_IMAGE_NAME):$(CA_REGISTRY_DOCKER_IMAGE_TAG) \
	$(API_REGISTRY_DOCKER_IMAGE_NAME):$(API_REGISTRY_DOCKER_IMAGE_TAG) \
	$(PSUEDO_IAS_DOCKER_IMAGE_NAME):$(PSUEDO_IAS_DOCKER_IMAGE_TAG) \
	$(DATATYPE_API_IMAGE_NAME):$(DATATYPE_API_IMAGE_TAG) \
	$(PSUEDO_API_DOCKER_IMAGE_NAME):$(PSUEDO_API_DOCKER_IMAGE_TAG)
