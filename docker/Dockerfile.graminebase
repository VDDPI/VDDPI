FROM gramineproject/gramine:stable-focal

ENV DEBIAN_FRONTEND=noninteractive

COPY gramine_base/linux-sgx-driver/ /opt/intel/linux-sgx-driver
COPY gramine_base/gramine-python /root/
COPY gramine_base/python.manifest.template /root/

RUN apt-get update
RUN apt-get install -y build-essential \
    autoconf bison gawk nasm ninja-build python3 python3-click \
    python3-jinja2 python3-pyelftools wget \
    python3-pip
RUN python3 -m pip install 'meson>=0.56' 'toml>=0.10'
RUN apt-get install -y libunwind8 musl-tools python3-pytest
RUN apt-get install -y libgmp-dev libmpfr-dev libmpc-dev libisl-dev
RUN apt-get install -y libcurl4-openssl-dev \
    libprotobuf-c-dev protobuf-c-compiler protobuf-compiler \
    python3-cryptography python3-pip python3-protobuf
RUN apt-get install -y git pkg-config libssl-dev

# gramine setup
RUN git clone https://github.com/gramineproject/gramine.git -b v1.3.1
RUN cd /gramine && meson setup build/ --buildtype=release -Ddirect=enabled -Dsgx=enabled -Dsgx_driver=oot -Dsgx_driver_include_path=/opt/intel/linux-sgx-driver \
    && ninja -C build && ninja -C build/ install

# cpython build
RUN git clone https://github.com/python/cpython.git -b v3.6.9
COPY gramine_base/python.c /cpython/Programs/
COPY gramine_base/build_cpython.sh /cpython/
RUN cd cpython && ./configure && sed -i '223s/$/ -lssl -lcrypto/' Makefile && make && make install
RUN pip3 install requests numpy scipy
RUN cp /usr/local/bin/python3 /usr/bin/mypython

# for CSR generation
RUN pip3 install future asn1
RUN pip3 install "pip>=20"
RUN pip3 install pyOpenSSL

# for JWT verification
RUN pip3 install PyJWT cryptography

# for server
RUN pip3 install flask pycryptodome pycryptodomex
RUN cd /root && mkdir server
COPY psuedo_ias/signCA.crt server/psuedo_Attestation_RootCA.pem

RUN cd /root && mkdir certs
